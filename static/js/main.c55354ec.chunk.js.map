{"version":3,"sources":["hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/Burger/OrderSumary/OrderSumary.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css"],"names":["aux","props","children","logo","react_default","a","createElement","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","NavigationItem_NavigationItem","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxiliary","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Content","Component","BurgerIngredient","ingredient","type","clases","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","Tomato","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","ordered","purchasable","OrderButton","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","spinner","Loader","button","Button","btnType","orderSumary","ingredientSumary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","onInitIngredients","sum","disabledInfo","objectSpread","ings","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSumary","loading","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","onInitPurchase","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","Order_Order","fetchedOrders","err","App","components_Layout_Layout","Switch","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","lettuce","tomato","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","defineProperty","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","enable","Success","Danger","__webpack_require__","p","load2"],"mappings":"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","file":"static/js/main.c55354ec.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n\r\n// parameters => expression\r\n// // is equivalent to:\r\n// function (parameters){\r\n//   return expression;\r\n// }\r\n\r\n// React can tell the difference between JSX & JavaScript by the sequential order of the code parts. \r\n\r\n// (<div>{props.children}</div>) React thinks,  DOM elements enclosing curly braces = JSX. \r\n\r\n//         The parenthesis are optional (here) so they're not really considered. \r\n\r\n// ({props.children}) React thinks,  No DOM elements, just curly braces = a JavaScript object literal.   BUT  ... \r\n\r\n//         props.children is invalid object literal code,  so,  throw an error. \r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n// Slightly Off topic example: const MyComponent = myValue => ({myProperty: myValue}); \r\n\r\n// Above:  The parenthesis are necessary,  or else, \r\n\r\n//         React thinks the curly braces are this method's enclosing curly braces. \r\n\r\n//                 Not the object literal's curly braces.   So,  an error is thrown.     MLR \r\n\r\n// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- \r\n\r\n// You can replace each of the following code lines with the MyHOC component in my (below) script. \r\n\r\n// const MyHOC = props => (<div>{props.children}</div>); // Works \r\n\r\n// const MyHOC = props => <div>{props.children}</div>; // Works \r\n\r\n// const MyHOC = props => props.children; // Works \r\n\r\n// const MyHOC = props => { return props.children; }; // Works \r\n\r\n// const MyHOC = props => {props.children}; // Error \r\n\r\n// const MyHOC = props => ({props.children}); // Error \r\n\r\n// =============================================================================================== \r\n\r\n// Index.js     This file does not require any other files inside the src folder. \r\n\r\n// import React, {Component} from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// const MyChild = props => <div>Hello</div>;\r\n// const MyHOC = props => {\r\n//     const myHocStyle={color:'#c00', fontWeight:'bold', fontSize:'24px'};\r\n//     return <div style={myHocStyle}>{props.children}</div>;\r\n// };\r\n// class MyParent extends Component {\r\n//     render() {\r\n//         const myContainer={maxWidth:'280px', margin:'10px auto', padding:'4px 0',\r\n//                 backgroundColor:'#ddd', textAlign:'center', border:'1px solid #000'};\r\n//         return (\r\n//             <div style={myContainer}>\r\n//                 <MyHOC><MyChild /></MyHOC>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// ReactDOM.render(<MyParent />, document.getElementById('root'));","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.css';\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.css';\r\nconst backdrop = (props) => (\r\n    props.show ?<div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxiliary';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clases from './BurgerIngredient.css'\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        \r\n            let ingredient = null;\r\n            switch (this.props.type) {\r\n                case('bread-bottom'):\r\n                    ingredient = <div className={clases.BreadBottom}></div>\r\n                    break;\r\n                case('bread-top'):\r\n                    ingredient = (\r\n                        <div className={clases.BreadTop}>\r\n                     <div className={clases.Seeds1}>\r\n                    \r\n                    </div>\r\n                    <div className={clases.Seeds2}>\r\n                    \r\n                    </div>\r\n                    </div>\r\n                    )\r\n                    break;\r\n                case('meat'):\r\n                    ingredient = <div className={clases.Meat}></div>\r\n                    break;\r\n                case('cheese'):\r\n                    ingredient = <div className={clases.Cheese}></div>\r\n                    break;\r\n                case('lettuce'):\r\n                    ingredient = <div className={clases.Lettuce}></div>\r\n                    break;\r\n                case('bacon'):\r\n                    ingredient = <div className={clases.Bacon}></div>\r\n                    break;\r\n                case('tomato'):\r\n                    ingredient = <div className={clases.Tomato}></div>\r\n                    break;\r\n                default: \r\n                ingredient = null;\r\n            }\r\n            return ingredient;\r\n        }\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nconst burger = (props) => {\r\n    // console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            // console.log(props);\r\n            return [...Array(props.ingredients[igKey])].map((_, i)=>{\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        }).reduce((arr, el) =>{\r\n            return arr.concat(el)\r\n        }, []);\r\n    // 1].Object.keys(props.ingredients) \r\n    // [salad, bacon, meat, cheese].      \r\n    // 2] map(igKey => { return. }) \r\n    // Will iterate through each key \r\n    // 3]. e.g igKey = salad.   (salad: 2) \r\n    // return [...Array(props.ingredients[igKey])] \r\n    // 4]. map((_, i) => { \r\n    // return <BurgerIngredient key={igKey + i} type={igKey} />; \r\n    // }) \r\n    // This will map the array of [undefined, undefined] will just need index  \r\n    // e.g. For salad it will iterate 2 times and return \r\n    // <BurgerIngredient key=”salad0” type=”salad” /> \r\n    // <BurgerIngredient key=”salad1” type=”salad” \r\n\r\n          /*\r\n  Declare an ingredients array that will hold the BurgerIngredient\r\n  components.\r\n  */\r\n//   let ingredients = [];\r\n \r\n//   // Loop through every key in the props.ingredients object\r\n//   for (const ingKey in props.ingredients) {\r\n//     /*\r\n//     For every key, use a for loop that iterates as many times as the value\r\n//     contained in each key. For every iteration, add a BurgerIngredient to the\r\n//     ingredients array.\r\n//     */\r\n//     for (let i = 0; i < props.ingredients[ingKey]; i++) {\r\n//       ingredients.push(<BurgerIngredient key={ingKey + i} type={ingKey} />);\r\n//     }\r\n//   }\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css';\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div \r\n        className={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n        onClick={props.removed} \r\n        disabled={props.disabled}>Less</button>\r\n        <button\r\n        className={classes.More} \r\n        onClick={props.added}>More</button>\r\n    </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nconst controls = [\r\n    {\r\n        label: 'Lettuce', type: 'lettuce'\r\n    },\r\n    {\r\n        label: 'Bacon', type: 'bacon'\r\n    },\r\n    {\r\n        label: 'Cheese', type: 'cheese'\r\n    },\r\n    {\r\n        label: 'Meat', type: 'meat'\r\n    },\r\n    {\r\n        label: 'Tomato', type: 'tomato'\r\n    }\r\n]\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() =>props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n        onClick={props.ordered}\r\n        disabled={!props.purchasable}\r\n         className={classes.OrderButton}>ORDER NOW</button>\r\n    </div>\r\n);\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React from 'react';\r\n\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nconst orderSumary = (props) => {\r\n    const ingredientSumary = Object.keys(props.ingredients).map(igKey => {\r\n        return <li key={igKey}><span style={{textTransform:'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>\r\n    });\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A burger sumary</p>\r\n            <ul>\r\n                {ingredientSumary}\r\n            </ul>\r\n            <p><strong>Total Price: </strong>{props.price}</p>\r\n            <p>Continue to check out? </p>\r\n            <Button btnType=\"Danger\" clicked= {props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked= {props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSumary","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-21571.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport OrderSummary from '../../components/Burger/OrderSumary/OrderSumary';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n// import * as actionTypes from '../../store/actions';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n// const INGREDIENT_PRICES = {\r\n//     lettuce: 1,\r\n//     tomato: 1,\r\n//     cheese: 1.5,\r\n//     meat: 3,\r\n//     bacon: 2\r\n// }\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        // axios.get( 'https://react-my-burger-21571.firebaseio.com/ingredients.json' )\r\n        //     .then( response => {\r\n        //         this.setState( { ingredients: response.data } );\r\n        //     } )\r\n        //     .catch( error => {\r\n        //         this.setState( { error: true } );\r\n        //     } );\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        // const sum = Object.keys( ingredients )\r\n        //     .map( igKey => {\r\n        //         return ingredients[igKey];\r\n        //     } )\r\n        //     .reduce( ( sum, el ) => {\r\n        //         return sum + el;\r\n        //     }, 0 );\r\n        // this.setState( { purchasable: sum > 0 } );\r\n        const sum = Object.keys( ingredients )\r\n        .map( igKey => {\r\n            return ingredients[igKey];\r\n        } )\r\n        .reduce( ( sum, el ) => {\r\n            return sum + el;\r\n        }, 0 );\r\n         return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = ( type ) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n    //     this.updatePurchaseState( updatedIngredients );\r\n    // }\r\n\r\n    // removeIngredientHandler = ( type ) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if ( oldCount <= 0 ) {\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n    //     this.updatePurchaseState( updatedIngredients );\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState( { purchasing: true } );\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('You continue!');\r\n        // this.setState( { loading: true } );\r\n        // const order = {\r\n        //     ingredients: this.state.ingredients,\r\n        //     price: this.state.totalPrice,\r\n        //     customer: {\r\n        //         name: 'Max Schwarzmüller',\r\n        //         address: {\r\n        //             street: 'Teststreet 1',\r\n        //             zipCode: '41351',\r\n        //             country: 'Germany'\r\n        //         },\r\n        //         email: 'test@test.com'\r\n        //     },\r\n        //     deliveryMethod: 'fastest'\r\n        // }\r\n        // axios.post( '/orders.json', order )\r\n        //     .then( response => {\r\n        //         this.setState( { loading: false, purchasing: false } );\r\n        //     } )\r\n        //     .catch( error => {\r\n        //         this.setState( { loading: false, purchasing: false } );\r\n        //     } );\r\n        // const queryParams = [];\r\n        // for (let i in this.state.ingredients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // });\r\n        this.props.history.push('/checkout');\r\n\r\n    }\r\n\r\n    // render () {\r\n    //     const disabledInfo = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     for ( let key in disabledInfo ) {\r\n    //         disabledInfo[key] = disabledInfo[key] <= 0\r\n    //     }\r\n    //     let orderSummary = null;\r\n    //     let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n    //     if ( this.state.ingredients ) {\r\n    //         burger = (\r\n    //             <Aux>\r\n    //                 <Burger ingredients={this.props.ings} />\r\n    //                 <BuildControls\r\n    //                     ingredientAdded={this.props.onIngredientAdded}\r\n    //                     ingredientRemoved={this.props.onIngredientRemoved}\r\n    //                     disabled={disabledInfo}\r\n    //                     purchasable={this.updatePurchaseState(this.props.ings)}\r\n    //                     ordered={this.purchaseHandler}\r\n    //                     price={this.props.price} />\r\n    //             </Aux>\r\n    //         );\r\n    //         orderSummary = <OrderSummary\r\n    //             ingredients={this.props.ings}\r\n    //             price={this.props.price}\r\n    //             purchaseCancelled={this.purchaseCancelHandler}\r\n    //             purchaseContinued={this.purchaseContinueHandler} />;\r\n    //     }\r\n    //     if ( this.state.loading ) {\r\n    //         orderSummary = <Spinner />;\r\n    //     }\r\n    //     // {salad: true, meat: false, ...}\r\n    //     return (\r\n    //         <Aux>\r\n    //             <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n    //                 {orderSummary}\r\n    //             </Modal>\r\n    //             {burger}\r\n    //         </Aux>\r\n    //     );\r\n    // }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n        // ing refer ingredients\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        if ( this.state.loading ) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get( 'https://react-my-burger-21571.firebaseio.com/ingredients.json' )\r\n            .then( response => {\r\n               dispatch(setIngredients(response.data));\r\n            } )\r\n            .catch( error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            } );\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json', orderData )\n            .then( response => {\n                console.log( response.data );\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get( '/orders.json' )\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n  \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n        \r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    // state = {\n    //     ingredients: null,\n    //     totalPrice: 0\n    // }\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price = 0;\n    //     for (let param of query.entries()) {\n    //         // ['salad', '1']\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = param[1];\n    //         }\n    //     }\n    //     console.log(price);\n    //     console.log(ingredients);\n    //     this.setState({ingredients:ingredients, totalPrice: price});\n    // }\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack()\n    }\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n    // render() {\n    //     return (\n    //         <div>\n    //             <CheckoutSummary \n    //             ingredients={this.state.ingredients}\n    //             checkoutCancelled={this.checkoutCancelledHandler}\n    //             checkoutContinued={this.checkoutContinuedHandler}\n    //             />\n    //             <Route\n    //             path={this.props.match.path + '/contact-data'}\n    //             // component={ContactData} \n    //             render={(props) => (<ContactData\n    //                 ingredients={this.state.ingredients}\n    //                 price={this.state.totalPrice}\n    //                 {...props} />)}\n    //             />\n    //         </div>\n    //     );\n    // }\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if ( this.props.ings ) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // ings: state.ingredients\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders();\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch( actions.fetchOrders() )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/orders\" component={Orders} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.5,\n    tomato: 0.5,\n    cheese: 1,\n    meat: 1.5,\n    bacon: 1\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            lettuce: action.ingredients.lettuce,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat,\n            tomato: action.ingredients.tomato\n        },\n        totalPrice: 4,\n        error: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Lettuce\":\"BurgerIngredient__Lettuce__zoLnB\",\"Tomato\":\"BurgerIngredient__Tomato__1993E\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2UQcM\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load2\":\"Spinner__load2__1sg5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\",\"Input\":\"ContactData__Input__2uU-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};"],"sourceRoot":""}