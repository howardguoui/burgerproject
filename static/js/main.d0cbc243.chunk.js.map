{"version":3,"sources":["hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/Burger/OrderSumary/OrderSumary.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css"],"names":["aux","props","children","logo","react_default","a","createElement","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","NavigationItem_NavigationItem","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxiliary","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","clases","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","Tomato","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","spinner","Loader","button","Button","btnType","orderSumary","ingredientSumary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitIngredients","sum","disabledInfo","objectSpread","ings","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSumary","loading","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","onInitPurchase","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","Order_Order","queryParams","fetchedOrders","err","Auth","password","isSignup","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","Switch","components_Layout_Layout","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","lettuce","tomato","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","enable","Success","Danger","__webpack_require__","p","load2"],"mappings":"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","file":"static/js/main.d0cbc243.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n\r\n// parameters => expression\r\n// // is equivalent to:\r\n// function (parameters){\r\n//   return expression;\r\n// }\r\n\r\n// React can tell the difference between JSX & JavaScript by the sequential order of the code parts. \r\n\r\n// (<div>{props.children}</div>) React thinks,  DOM elements enclosing curly braces = JSX. \r\n\r\n//         The parenthesis are optional (here) so they're not really considered. \r\n\r\n// ({props.children}) React thinks,  No DOM elements, just curly braces = a JavaScript object literal.   BUT  ... \r\n\r\n//         props.children is invalid object literal code,  so,  throw an error. \r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n// Slightly Off topic example: const MyComponent = myValue => ({myProperty: myValue}); \r\n\r\n// Above:  The parenthesis are necessary,  or else, \r\n\r\n//         React thinks the curly braces are this method's enclosing curly braces. \r\n\r\n//                 Not the object literal's curly braces.   So,  an error is thrown.     MLR \r\n\r\n// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- \r\n\r\n// You can replace each of the following code lines with the MyHOC component in my (below) script. \r\n\r\n// const MyHOC = props => (<div>{props.children}</div>); // Works \r\n\r\n// const MyHOC = props => <div>{props.children}</div>; // Works \r\n\r\n// const MyHOC = props => props.children; // Works \r\n\r\n// const MyHOC = props => { return props.children; }; // Works \r\n\r\n// const MyHOC = props => {props.children}; // Error \r\n\r\n// const MyHOC = props => ({props.children}); // Error \r\n\r\n// =============================================================================================== \r\n\r\n// Index.js     This file does not require any other files inside the src folder. \r\n\r\n// import React, {Component} from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// const MyChild = props => <div>Hello</div>;\r\n// const MyHOC = props => {\r\n//     const myHocStyle={color:'#c00', fontWeight:'bold', fontSize:'24px'};\r\n//     return <div style={myHocStyle}>{props.children}</div>;\r\n// };\r\n// class MyParent extends Component {\r\n//     render() {\r\n//         const myContainer={maxWidth:'280px', margin:'10px auto', padding:'4px 0',\r\n//                 backgroundColor:'#ddd', textAlign:'center', border:'1px solid #000'};\r\n//         return (\r\n//             <div style={myContainer}>\r\n//                 <MyHOC><MyChild /></MyHOC>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// ReactDOM.render(<MyParent />, document.getElementById('root'));","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.css';\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = ( props ) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.css';\r\nconst backdrop = (props) => (\r\n    props.show ?<div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxiliary';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                 isAuth={this.props.isAuthenticated}\r\n                drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps )( Layout );","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clases from './BurgerIngredient.css'\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        \r\n            let ingredient = null;\r\n            switch (this.props.type) {\r\n                case('bread-bottom'):\r\n                    ingredient = <div className={clases.BreadBottom}></div>\r\n                    break;\r\n                case('bread-top'):\r\n                    ingredient = (\r\n                        <div className={clases.BreadTop}>\r\n                     <div className={clases.Seeds1}>\r\n                    \r\n                    </div>\r\n                    <div className={clases.Seeds2}>\r\n                    \r\n                    </div>\r\n                    </div>\r\n                    )\r\n                    break;\r\n                case('meat'):\r\n                    ingredient = <div className={clases.Meat}></div>\r\n                    break;\r\n                case('cheese'):\r\n                    ingredient = <div className={clases.Cheese}></div>\r\n                    break;\r\n                case('lettuce'):\r\n                    ingredient = <div className={clases.Lettuce}></div>\r\n                    break;\r\n                case('bacon'):\r\n                    ingredient = <div className={clases.Bacon}></div>\r\n                    break;\r\n                case('tomato'):\r\n                    ingredient = <div className={clases.Tomato}></div>\r\n                    break;\r\n                default: \r\n                ingredient = null;\r\n            }\r\n            return ingredient;\r\n        }\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nconst burger = (props) => {\r\n    // console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            // console.log(props);\r\n            return [...Array(props.ingredients[igKey])].map((_, i)=>{\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        }).reduce((arr, el) =>{\r\n            return arr.concat(el)\r\n        }, []);\r\n    // 1].Object.keys(props.ingredients) \r\n    // [salad, bacon, meat, cheese].      \r\n    // 2] map(igKey => { return. }) \r\n    // Will iterate through each key \r\n    // 3]. e.g igKey = salad.   (salad: 2) \r\n    // return [...Array(props.ingredients[igKey])] \r\n    // 4]. map((_, i) => { \r\n    // return <BurgerIngredient key={igKey + i} type={igKey} />; \r\n    // }) \r\n    // This will map the array of [undefined, undefined] will just need index  \r\n    // e.g. For salad it will iterate 2 times and return \r\n    // <BurgerIngredient key=”salad0” type=”salad” /> \r\n    // <BurgerIngredient key=”salad1” type=”salad” \r\n\r\n          /*\r\n  Declare an ingredients array that will hold the BurgerIngredient\r\n  components.\r\n  */\r\n//   let ingredients = [];\r\n \r\n//   // Loop through every key in the props.ingredients object\r\n//   for (const ingKey in props.ingredients) {\r\n//     /*\r\n//     For every key, use a for loop that iterates as many times as the value\r\n//     contained in each key. For every iteration, add a BurgerIngredient to the\r\n//     ingredients array.\r\n//     */\r\n//     for (let i = 0; i < props.ingredients[ingKey]; i++) {\r\n//       ingredients.push(<BurgerIngredient key={ingKey + i} type={ingKey} />);\r\n//     }\r\n//   }\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css';\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div \r\n        className={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n        onClick={props.removed} \r\n        disabled={props.disabled}>Less</button>\r\n        <button\r\n        className={classes.More} \r\n        onClick={props.added}>More</button>\r\n    </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nconst controls = [\r\n    {\r\n        label: 'Lettuce', type: 'lettuce'\r\n    },\r\n    {\r\n        label: 'Bacon', type: 'bacon'\r\n    },\r\n    {\r\n        label: 'Cheese', type: 'cheese'\r\n    },\r\n    {\r\n        label: 'Meat', type: 'meat'\r\n    },\r\n    {\r\n        label: 'Tomato', type: 'tomato'\r\n    }\r\n]\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() =>props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n        disabled={!props.purchasable}\r\n         className={classes.OrderButton}\r\n         onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        // console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React from 'react';\r\n\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\nconst orderSumary = (props) => {\r\n    const ingredientSumary = Object.keys(props.ingredients).map(igKey => {\r\n        return <li key={igKey}><span style={{textTransform:'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>\r\n    });\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A burger sumary</p>\r\n            <ul>\r\n                {ingredientSumary}\r\n            </ul>\r\n            <p><strong>Total Price: </strong>{props.price}</p>\r\n            <p>Continue to check out? </p>\r\n            <Button btnType=\"Danger\" clicked= {props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked= {props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSumary","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-21571.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxiliary';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\nexport const auth = (email, password, isSignup) => {\n    // console.log(isSignup);\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        // console.log(authData);\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDQ3EDi1hzMFnV9to42umfUcZ5rypToJFI';\n        if (!isSignup) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDQ3EDi1hzMFnV9to42umfUcZ5rypToJFI';\n        }\n        axios.post(url, authData)\n            .then(response => {\n                // console.log(response);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                // console.log(err);\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport OrderSummary from '../../components/Burger/OrderSumary/OrderSumary';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n// import * as actionTypes from '../../store/actions';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n// const INGREDIENT_PRICES = {\r\n//     lettuce: 1,\r\n//     tomato: 1,\r\n//     cheese: 1.5,\r\n//     meat: 3,\r\n//     bacon: 2\r\n// }\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        // console.log(this.props);\r\n        // axios.get( 'https://react-my-burger-21571.firebaseio.com/ingredients.json' )\r\n        //     .then( response => {\r\n        //         this.setState( { ingredients: response.data } );\r\n        //     } )\r\n        //     .catch( error => {\r\n        //         this.setState( { error: true } );\r\n        //     } );\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        // const sum = Object.keys( ingredients )\r\n        //     .map( igKey => {\r\n        //         return ingredients[igKey];\r\n        //     } )\r\n        //     .reduce( ( sum, el ) => {\r\n        //         return sum + el;\r\n        //     }, 0 );\r\n        // this.setState( { purchasable: sum > 0 } );\r\n        const sum = Object.keys( ingredients )\r\n        .map( igKey => {\r\n            return ingredients[igKey];\r\n        } )\r\n        .reduce( ( sum, el ) => {\r\n            return sum + el;\r\n        }, 0 );\r\n         return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = ( type ) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n    //     this.updatePurchaseState( updatedIngredients );\r\n    // }\r\n\r\n    // removeIngredientHandler = ( type ) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if ( oldCount <= 0 ) {\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n    //     this.updatePurchaseState( updatedIngredients );\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState( { purchasing: true } );\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('You continue!');\r\n        // this.setState( { loading: true } );\r\n        // const order = {\r\n        //     ingredients: this.state.ingredients,\r\n        //     price: this.state.totalPrice,\r\n        //     customer: {\r\n        //         name: 'Max Schwarzmüller',\r\n        //         address: {\r\n        //             street: 'Teststreet 1',\r\n        //             zipCode: '41351',\r\n        //             country: 'Germany'\r\n        //         },\r\n        //         email: 'test@test.com'\r\n        //     },\r\n        //     deliveryMethod: 'fastest'\r\n        // }\r\n        // axios.post( '/orders.json', order )\r\n        //     .then( response => {\r\n        //         this.setState( { loading: false, purchasing: false } );\r\n        //     } )\r\n        //     .catch( error => {\r\n        //         this.setState( { loading: false, purchasing: false } );\r\n        //     } );\r\n        // const queryParams = [];\r\n        // for (let i in this.state.ingredients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // });\r\n        this.props.history.push('/checkout');\r\n\r\n    }\r\n\r\n    // render () {\r\n    //     const disabledInfo = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     for ( let key in disabledInfo ) {\r\n    //         disabledInfo[key] = disabledInfo[key] <= 0\r\n    //     }\r\n    //     let orderSummary = null;\r\n    //     let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n    //     if ( this.state.ingredients ) {\r\n    //         burger = (\r\n    //             <Aux>\r\n    //                 <Burger ingredients={this.props.ings} />\r\n    //                 <BuildControls\r\n    //                     ingredientAdded={this.props.onIngredientAdded}\r\n    //                     ingredientRemoved={this.props.onIngredientRemoved}\r\n    //                     disabled={disabledInfo}\r\n    //                     purchasable={this.updatePurchaseState(this.props.ings)}\r\n    //                     ordered={this.purchaseHandler}\r\n    //                     price={this.props.price} />\r\n    //             </Aux>\r\n    //         );\r\n    //         orderSummary = <OrderSummary\r\n    //             ingredients={this.props.ings}\r\n    //             price={this.props.price}\r\n    //             purchaseCancelled={this.purchaseCancelHandler}\r\n    //             purchaseContinued={this.purchaseContinueHandler} />;\r\n    //     }\r\n    //     if ( this.state.loading ) {\r\n    //         orderSummary = <Spinner />;\r\n    //     }\r\n    //     // {salad: true, meat: false, ...}\r\n    //     return (\r\n    //         <Aux>\r\n    //             <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n    //                 {orderSummary}\r\n    //             </Modal>\r\n    //             {burger}\r\n    //         </Aux>\r\n    //     );\r\n    // }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n        // ing refer ingredients\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        if ( this.state.loading ) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get( 'https://react-my-burger-21571.firebaseio.com/ingredients.json' )\r\n            .then( response => {\r\n               dispatch(setIngredients(response.data));\r\n            } )\r\n            .catch( error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            } );\r\n    };\r\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth=' + token, orderData )\n            .then( response => {\n                // console.log( response.data );\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get( '/orders.json' + queryParams)\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n  \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    // state = {\n    //     ingredients: null,\n    //     totalPrice: 0\n    // }\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price = 0;\n    //     for (let param of query.entries()) {\n    //         // ['salad', '1']\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = param[1];\n    //         }\n    //     }\n    //     console.log(price);\n    //     console.log(ingredients);\n    //     this.setState({ingredients:ingredients, totalPrice: price});\n    // }\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack()\n    }\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n    // render() {\n    //     return (\n    //         <div>\n    //             <CheckoutSummary \n    //             ingredients={this.state.ingredients}\n    //             checkoutCancelled={this.checkoutCancelledHandler}\n    //             checkoutContinued={this.checkoutContinuedHandler}\n    //             />\n    //             <Route\n    //             path={this.props.match.path + '/contact-data'}\n    //             // component={ContactData} \n    //             render={(props) => (<ContactData\n    //                 ingredients={this.state.ingredients}\n    //                 price={this.state.totalPrice}\n    //                 {...props} />)}\n    //             />\n    //         </div>\n    //     );\n    // }\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if ( this.props.ings ) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // ings: state.ingredients\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n\n    componentDidMount() {\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    checkValidity ( value, rules ) {\n        let isValid = true;\n        if ( !rules ) {\n            return true;\n        }\n\n        if ( rules.required ) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if ( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if ( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if ( rules.isEmail ) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test( value ) && isValid\n        }\n\n        if ( rules.isNumeric ) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test( value ) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity( event.target.value, this.state.controls[controlName].validation ),\n                touched: true\n            }\n        };\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignup: !prevState.isSignup};\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\n\r\nclass App extends Component {\r\n  componentDidMount () {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render () {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if ( this.props.isAuthenticated ) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n  };\r\n};\r\n// have to use withRouter\r\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.5,\n    tomato: 0.5,\n    cheese: 1,\n    meat: 1.5,\n    bacon: 1\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            lettuce: action.ingredients.lettuce,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat,\n            tomato: action.ingredients.tomato\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Lettuce\":\"BurgerIngredient__Lettuce__zoLnB\",\"Tomato\":\"BurgerIngredient__Tomato__1993E\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2UQcM\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load2\":\"Spinner__load2__1sg5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\",\"Input\":\"ContactData__Input__2uU-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\"};"],"sourceRoot":""}